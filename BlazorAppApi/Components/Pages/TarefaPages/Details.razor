@page "/tarefas/details"

@using Microsoft.EntityFrameworkCore
@using BlazorAppApi.Models
@inject IDbContextFactory<BlazorAppApi.Context.TarefaContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h4>Tarefa</h4>
    <hr />
    @if (tarefa is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">name</dt>
            <dd class="col-sm-10">@tarefa.name</dd>
            <dt class="col-sm-2">description</dt>
            <dd class="col-sm-10">@tarefa.description</dd>
        </dl>
        <div>
            <a href="@($"/tarefas/edit?id={tarefa.id}")">Edit</a> |
            <a href="@($"/tarefas")">Back to List</a>
        </div>
    }
</div>

@code {
    Tarefa? tarefa;

    [SupplyParameterFromQuery]
    public int id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        tarefa = await context.Tarefas.FirstOrDefaultAsync(m => m.id == id);

        if (tarefa is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
